<?xml version="1.0"?>
<ruleset name="Conversion-Ready">
	<description>A custom set of rules to check for a Conversion Ready WordPress project</description>

	<!-- Spaces, not tabs -->
	<rule ref="Generic.WhiteSpace.DisallowTabIndent" />

	<!--
	We may also want to to include all the rules in a standard
	-->
	<rule ref="WordPress-Core">
		<!--
		We may want a middle ground though. The best way to do this is add the
		entire ruleset, then rule by rule, remove ones that don't suit a project. We
		can do this by running `phpcs` with the '-s' flag, to see the names of the
		different Sniffs, as their rules are broken. From here, we can opt to
		exclude problematic sniffs like so.
		-->
		<!-- Spaces, not tabs -->
		<exclude name="Generic.WhiteSpace.DisallowSpaceIndent" />
	</rule>

	<rule ref="WordPress-Extra">
	</rule>

	<!--
	Allow wider vertical spacing coding style:

	```php
		...

		if ( foo ) {
			bar();
		}

	}
	```
	-->
	<rule ref="WordPress.WhiteSpace.ControlStructureSpacing">
		<properties>
			<property name="blank_line_after_check" value="0" />
		</properties>
	</rule>

	<!--
	WP filename conventions are incompatible w/ Composer PSR-4 autoloader.
	-->
	<rule ref="WordPress">
		<exclude name="WordPress.Files.FileName" />
	</rule>

	<!--
	Allow `add_action( 'tag', function() {
	} );

	@see https://github.com/squizlabs/PHP_CodeSniffer/issues/2001
	@see https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/1485
	-->
	<rule ref="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket">
		<severity>0</severity>
	</rule>
	<rule ref="PEAR.Functions.FunctionCallSignature.MultipleArguments">
		<severity>0</severity>
	</rule>
	<rule ref="PEAR.Functions.FunctionCallSignature.CloseBracketLine">
		<severity>0</severity>
	</rule>
</ruleset>
